<?xml version="1.0" encoding="UTF-8"?>
<jube version="2.1.4">
  <benchmark file_path_ref="../.." name="init_outputFile" outpath="..">
    <comment>Creates and writes the header of the data files that will contain the benchmark pattern assessment results</comment>
    <parameterset name="parameter">
      <parameter mode="text" name="HACK_PATH" separator="," type="string">../../../../../</parameter>
      <parameter mode="text" name="fileScriptParseCubeDumpRes" separator="," type="string">./srcPlot/mainParseCubeDumpResFile.py</parameter>
      <parameter mode="text" name="filePathStatistic" separator="," type="string">../resource/statistic/</parameter>
      <parameter mode="text" name="nbProcessor" separator="," type="string">2</parameter>
      <parameter mode="text" name="fileScriptPlot" separator="," type="string">./srcPlot/mainPlot.py</parameter>
      <parameter mode="text" name="cube_save_id" separator="," type="string">16</parameter>
      <parameter mode="text" name="CubeDumpResFile" separator="," type="string">../resource/tmpCubeDumpFile</parameter>
      <parameter mode="text" name="fileOutput" separator="," type="string">../resource/ioFiles/defaultJube</parameter>
      <parameter mode="text" name="nbIoDevice" separator="," type="string">1</parameter>
      <parameter mode="text" name="cube_computeAndSaveLoop_id" separator="," type="string">14</parameter>
      <parameter mode="text" name="cube_computeAndSaveLoopAndWaitEnd_id" separator="," type="string">13</parameter>
    </parameterset>
    <parameterset name="parameter_variableDim_nbIteration">
      <parameter mode="text" name="nbIteration" separator="," type="int">1,2,3,4,5,6</parameter>
    </parameterset>
    <parameterset name="parameter_variableDim_nbCharOutput">
      <parameter mode="text" name="nbCharOutput" separator="," type="int">500000000</parameter>
    </parameterset>
    <parameterset name="parameter_benchmarkResultFile">
      <parameter mode="text" name="fileExec" separator="," type="str">./posixGlibcIO_sleep</parameter>
      <parameter mode="text" name="computeTime" separator="," type="float">0</parameter>
      <parameter mode="text" name="benchmarkResultFile" separator="," type="str">${filePathStatistic}/${fileExec}_${computeTime}.data</parameter>
    </parameterset>
    <step name="init_outputFile">
      <use>parameter</use>
      <use>parameter_benchmarkResultFile</use>
      <do>echo											&gt;  $HACK_PATH${benchmarkResultFile}</do>
      <do>echo &quot;################################&quot;			&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
      <do>echo &quot;#Benchmark pattern info:&quot;					&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
      <do>echo &quot;################################&quot;			&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
      <do>echo ${fileExec}								&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
      <do>echo &quot;################################&quot;			&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
      <do>echo &quot;#Fixed dim and values:&quot;					&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
      <do>echo &quot;################################&quot;			&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
      <do>echo &quot;computeTime,&quot; ${computeTime}	 			&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
      <do>echo &quot;################################&quot;			&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
      <do>echo &quot;#Variable dim:&quot;							&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
      <do>echo &quot;################################&quot;			&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
      <do>echo &quot;nbIteration,nbCharOutput&quot;					&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
      <do>echo &quot;################################&quot;			&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
      <do>echo &quot;#Result dim:&quot;								&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
      <do>echo &quot;################################&quot;			&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
      <do>echo &quot;save time / nb Iteration&quot;		&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
      <do>echo &quot;################################&quot;			&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
      <do>echo &quot;#Data:&quot;									&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
      <do>echo &quot;################################&quot;			&gt;&gt; $HACK_PATH${benchmarkResultFile}</do>
    </step>
  </benchmark>
</jube>
